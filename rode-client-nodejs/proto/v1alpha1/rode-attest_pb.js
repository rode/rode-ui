// source: proto/v1alpha1/rode-attest.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.rode.v1alpha1.AttestPolicyAttestation', null, global);
goog.exportSymbol('proto.rode.v1alpha1.AttestPolicyRequest', null, global);
goog.exportSymbol('proto.rode.v1alpha1.AttestPolicyResponse', null, global);
goog.exportSymbol('proto.rode.v1alpha1.AttestPolicyViolation', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rode.v1alpha1.AttestPolicyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rode.v1alpha1.AttestPolicyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rode.v1alpha1.AttestPolicyRequest.displayName = 'proto.rode.v1alpha1.AttestPolicyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rode.v1alpha1.AttestPolicyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rode.v1alpha1.AttestPolicyResponse.repeatedFields_, null);
};
goog.inherits(proto.rode.v1alpha1.AttestPolicyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rode.v1alpha1.AttestPolicyResponse.displayName = 'proto.rode.v1alpha1.AttestPolicyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rode.v1alpha1.AttestPolicyAttestation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rode.v1alpha1.AttestPolicyAttestation.repeatedFields_, null);
};
goog.inherits(proto.rode.v1alpha1.AttestPolicyAttestation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rode.v1alpha1.AttestPolicyAttestation.displayName = 'proto.rode.v1alpha1.AttestPolicyAttestation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rode.v1alpha1.AttestPolicyViolation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rode.v1alpha1.AttestPolicyViolation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rode.v1alpha1.AttestPolicyViolation.displayName = 'proto.rode.v1alpha1.AttestPolicyViolation';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rode.v1alpha1.AttestPolicyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rode.v1alpha1.AttestPolicyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rode.v1alpha1.AttestPolicyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rode.v1alpha1.AttestPolicyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    policy: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resourceuri: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rode.v1alpha1.AttestPolicyRequest}
 */
proto.rode.v1alpha1.AttestPolicyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rode.v1alpha1.AttestPolicyRequest;
  return proto.rode.v1alpha1.AttestPolicyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rode.v1alpha1.AttestPolicyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rode.v1alpha1.AttestPolicyRequest}
 */
proto.rode.v1alpha1.AttestPolicyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicy(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceuri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rode.v1alpha1.AttestPolicyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rode.v1alpha1.AttestPolicyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rode.v1alpha1.AttestPolicyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rode.v1alpha1.AttestPolicyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPolicy();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResourceuri();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string policy = 1;
 * @return {string}
 */
proto.rode.v1alpha1.AttestPolicyRequest.prototype.getPolicy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rode.v1alpha1.AttestPolicyRequest} returns this
 */
proto.rode.v1alpha1.AttestPolicyRequest.prototype.setPolicy = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string resourceURI = 2;
 * @return {string}
 */
proto.rode.v1alpha1.AttestPolicyRequest.prototype.getResourceuri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rode.v1alpha1.AttestPolicyRequest} returns this
 */
proto.rode.v1alpha1.AttestPolicyRequest.prototype.setResourceuri = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rode.v1alpha1.AttestPolicyResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rode.v1alpha1.AttestPolicyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rode.v1alpha1.AttestPolicyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rode.v1alpha1.AttestPolicyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rode.v1alpha1.AttestPolicyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    allow: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    changed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    attestationsList: jspb.Message.toObjectList(msg.getAttestationsList(),
    proto.rode.v1alpha1.AttestPolicyAttestation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rode.v1alpha1.AttestPolicyResponse}
 */
proto.rode.v1alpha1.AttestPolicyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rode.v1alpha1.AttestPolicyResponse;
  return proto.rode.v1alpha1.AttestPolicyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rode.v1alpha1.AttestPolicyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rode.v1alpha1.AttestPolicyResponse}
 */
proto.rode.v1alpha1.AttestPolicyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllow(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChanged(value);
      break;
    case 3:
      var value = new proto.rode.v1alpha1.AttestPolicyAttestation;
      reader.readMessage(value,proto.rode.v1alpha1.AttestPolicyAttestation.deserializeBinaryFromReader);
      msg.addAttestations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rode.v1alpha1.AttestPolicyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rode.v1alpha1.AttestPolicyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rode.v1alpha1.AttestPolicyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rode.v1alpha1.AttestPolicyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllow();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getChanged();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getAttestationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.rode.v1alpha1.AttestPolicyAttestation.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool allow = 1;
 * @return {boolean}
 */
proto.rode.v1alpha1.AttestPolicyResponse.prototype.getAllow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rode.v1alpha1.AttestPolicyResponse} returns this
 */
proto.rode.v1alpha1.AttestPolicyResponse.prototype.setAllow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool changed = 2;
 * @return {boolean}
 */
proto.rode.v1alpha1.AttestPolicyResponse.prototype.getChanged = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rode.v1alpha1.AttestPolicyResponse} returns this
 */
proto.rode.v1alpha1.AttestPolicyResponse.prototype.setChanged = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated AttestPolicyAttestation attestations = 3;
 * @return {!Array<!proto.rode.v1alpha1.AttestPolicyAttestation>}
 */
proto.rode.v1alpha1.AttestPolicyResponse.prototype.getAttestationsList = function() {
  return /** @type{!Array<!proto.rode.v1alpha1.AttestPolicyAttestation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rode.v1alpha1.AttestPolicyAttestation, 3));
};


/**
 * @param {!Array<!proto.rode.v1alpha1.AttestPolicyAttestation>} value
 * @return {!proto.rode.v1alpha1.AttestPolicyResponse} returns this
*/
proto.rode.v1alpha1.AttestPolicyResponse.prototype.setAttestationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.rode.v1alpha1.AttestPolicyAttestation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rode.v1alpha1.AttestPolicyAttestation}
 */
proto.rode.v1alpha1.AttestPolicyResponse.prototype.addAttestations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.rode.v1alpha1.AttestPolicyAttestation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rode.v1alpha1.AttestPolicyResponse} returns this
 */
proto.rode.v1alpha1.AttestPolicyResponse.prototype.clearAttestationsList = function() {
  return this.setAttestationsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rode.v1alpha1.AttestPolicyAttestation.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rode.v1alpha1.AttestPolicyAttestation.prototype.toObject = function(opt_includeInstance) {
  return proto.rode.v1alpha1.AttestPolicyAttestation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rode.v1alpha1.AttestPolicyAttestation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rode.v1alpha1.AttestPolicyAttestation.toObject = function(includeInstance, msg) {
  var f, obj = {
    allow: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    violationsList: jspb.Message.toObjectList(msg.getViolationsList(),
    proto.rode.v1alpha1.AttestPolicyViolation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rode.v1alpha1.AttestPolicyAttestation}
 */
proto.rode.v1alpha1.AttestPolicyAttestation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rode.v1alpha1.AttestPolicyAttestation;
  return proto.rode.v1alpha1.AttestPolicyAttestation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rode.v1alpha1.AttestPolicyAttestation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rode.v1alpha1.AttestPolicyAttestation}
 */
proto.rode.v1alpha1.AttestPolicyAttestation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllow(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 3:
      var value = new proto.rode.v1alpha1.AttestPolicyViolation;
      reader.readMessage(value,proto.rode.v1alpha1.AttestPolicyViolation.deserializeBinaryFromReader);
      msg.addViolations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rode.v1alpha1.AttestPolicyAttestation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rode.v1alpha1.AttestPolicyAttestation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rode.v1alpha1.AttestPolicyAttestation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rode.v1alpha1.AttestPolicyAttestation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllow();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getViolationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.rode.v1alpha1.AttestPolicyViolation.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool allow = 1;
 * @return {boolean}
 */
proto.rode.v1alpha1.AttestPolicyAttestation.prototype.getAllow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rode.v1alpha1.AttestPolicyAttestation} returns this
 */
proto.rode.v1alpha1.AttestPolicyAttestation.prototype.setAllow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp created = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.rode.v1alpha1.AttestPolicyAttestation.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.rode.v1alpha1.AttestPolicyAttestation} returns this
*/
proto.rode.v1alpha1.AttestPolicyAttestation.prototype.setCreated = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rode.v1alpha1.AttestPolicyAttestation} returns this
 */
proto.rode.v1alpha1.AttestPolicyAttestation.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rode.v1alpha1.AttestPolicyAttestation.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated AttestPolicyViolation violations = 3;
 * @return {!Array<!proto.rode.v1alpha1.AttestPolicyViolation>}
 */
proto.rode.v1alpha1.AttestPolicyAttestation.prototype.getViolationsList = function() {
  return /** @type{!Array<!proto.rode.v1alpha1.AttestPolicyViolation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rode.v1alpha1.AttestPolicyViolation, 3));
};


/**
 * @param {!Array<!proto.rode.v1alpha1.AttestPolicyViolation>} value
 * @return {!proto.rode.v1alpha1.AttestPolicyAttestation} returns this
*/
proto.rode.v1alpha1.AttestPolicyAttestation.prototype.setViolationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.rode.v1alpha1.AttestPolicyViolation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rode.v1alpha1.AttestPolicyViolation}
 */
proto.rode.v1alpha1.AttestPolicyAttestation.prototype.addViolations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.rode.v1alpha1.AttestPolicyViolation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rode.v1alpha1.AttestPolicyAttestation} returns this
 */
proto.rode.v1alpha1.AttestPolicyAttestation.prototype.clearViolationsList = function() {
  return this.setViolationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rode.v1alpha1.AttestPolicyViolation.prototype.toObject = function(opt_includeInstance) {
  return proto.rode.v1alpha1.AttestPolicyViolation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rode.v1alpha1.AttestPolicyViolation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rode.v1alpha1.AttestPolicyViolation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    link: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rode.v1alpha1.AttestPolicyViolation}
 */
proto.rode.v1alpha1.AttestPolicyViolation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rode.v1alpha1.AttestPolicyViolation;
  return proto.rode.v1alpha1.AttestPolicyViolation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rode.v1alpha1.AttestPolicyViolation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rode.v1alpha1.AttestPolicyViolation}
 */
proto.rode.v1alpha1.AttestPolicyViolation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rode.v1alpha1.AttestPolicyViolation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rode.v1alpha1.AttestPolicyViolation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rode.v1alpha1.AttestPolicyViolation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rode.v1alpha1.AttestPolicyViolation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLink();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rode.v1alpha1.AttestPolicyViolation.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rode.v1alpha1.AttestPolicyViolation} returns this
 */
proto.rode.v1alpha1.AttestPolicyViolation.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.rode.v1alpha1.AttestPolicyViolation.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rode.v1alpha1.AttestPolicyViolation} returns this
 */
proto.rode.v1alpha1.AttestPolicyViolation.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.rode.v1alpha1.AttestPolicyViolation.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rode.v1alpha1.AttestPolicyViolation} returns this
 */
proto.rode.v1alpha1.AttestPolicyViolation.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string link = 4;
 * @return {string}
 */
proto.rode.v1alpha1.AttestPolicyViolation.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.rode.v1alpha1.AttestPolicyViolation} returns this
 */
proto.rode.v1alpha1.AttestPolicyViolation.prototype.setLink = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


goog.object.extend(exports, proto.rode.v1alpha1);
