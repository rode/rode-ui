// source: proto/v1beta1/provenance.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var proto_v1beta1_source_pb = require('../../proto/v1beta1/source_pb.js');
goog.object.extend(proto, proto_v1beta1_source_pb);
goog.exportSymbol('proto.grafeas.v1beta1.provenance.Artifact', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.provenance.BuildProvenance', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.provenance.Command', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.provenance.FileHashes', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.provenance.Hash', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.provenance.Hash.HashType', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.provenance.Source', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.provenance.BuildProvenance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grafeas.v1beta1.provenance.BuildProvenance.repeatedFields_, null);
};
goog.inherits(proto.grafeas.v1beta1.provenance.BuildProvenance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.provenance.BuildProvenance.displayName = 'proto.grafeas.v1beta1.provenance.BuildProvenance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.provenance.Source = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grafeas.v1beta1.provenance.Source.repeatedFields_, null);
};
goog.inherits(proto.grafeas.v1beta1.provenance.Source, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.provenance.Source.displayName = 'proto.grafeas.v1beta1.provenance.Source';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.provenance.FileHashes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grafeas.v1beta1.provenance.FileHashes.repeatedFields_, null);
};
goog.inherits(proto.grafeas.v1beta1.provenance.FileHashes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.provenance.FileHashes.displayName = 'proto.grafeas.v1beta1.provenance.FileHashes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.provenance.Hash = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grafeas.v1beta1.provenance.Hash, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.provenance.Hash.displayName = 'proto.grafeas.v1beta1.provenance.Hash';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.provenance.Command = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grafeas.v1beta1.provenance.Command.repeatedFields_, null);
};
goog.inherits(proto.grafeas.v1beta1.provenance.Command, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.provenance.Command.displayName = 'proto.grafeas.v1beta1.provenance.Command';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.provenance.Artifact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grafeas.v1beta1.provenance.Artifact.repeatedFields_, null);
};
goog.inherits(proto.grafeas.v1beta1.provenance.Artifact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.provenance.Artifact.displayName = 'proto.grafeas.v1beta1.provenance.Artifact';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.provenance.BuildProvenance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.provenance.BuildProvenance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commandsList: jspb.Message.toObjectList(msg.getCommandsList(),
    proto.grafeas.v1beta1.provenance.Command.toObject, includeInstance),
    builtArtifactsList: jspb.Message.toObjectList(msg.getBuiltArtifactsList(),
    proto.grafeas.v1beta1.provenance.Artifact.toObject, includeInstance),
    createTime: (f = msg.getCreateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    creator: jspb.Message.getFieldWithDefault(msg, 8, ""),
    logsUri: jspb.Message.getFieldWithDefault(msg, 9, ""),
    sourceProvenance: (f = msg.getSourceProvenance()) && proto.grafeas.v1beta1.provenance.Source.toObject(includeInstance, f),
    triggerId: jspb.Message.getFieldWithDefault(msg, 11, ""),
    buildOptionsMap: (f = msg.getBuildOptionsMap()) ? f.toObject(includeInstance, undefined) : [],
    builderVersion: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.provenance.BuildProvenance;
  return proto.grafeas.v1beta1.provenance.BuildProvenance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.provenance.BuildProvenance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 3:
      var value = new proto.grafeas.v1beta1.provenance.Command;
      reader.readMessage(value,proto.grafeas.v1beta1.provenance.Command.deserializeBinaryFromReader);
      msg.addCommands(value);
      break;
    case 4:
      var value = new proto.grafeas.v1beta1.provenance.Artifact;
      reader.readMessage(value,proto.grafeas.v1beta1.provenance.Artifact.deserializeBinaryFromReader);
      msg.addBuiltArtifacts(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTime(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreator(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogsUri(value);
      break;
    case 10:
      var value = new proto.grafeas.v1beta1.provenance.Source;
      reader.readMessage(value,proto.grafeas.v1beta1.provenance.Source.deserializeBinaryFromReader);
      msg.setSourceProvenance(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTriggerId(value);
      break;
    case 12:
      var value = msg.getBuildOptionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuilderVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.provenance.BuildProvenance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.provenance.BuildProvenance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommandsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.grafeas.v1beta1.provenance.Command.serializeBinaryToWriter
    );
  }
  f = message.getBuiltArtifactsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.grafeas.v1beta1.provenance.Artifact.serializeBinaryToWriter
    );
  }
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreator();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLogsUri();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSourceProvenance();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.grafeas.v1beta1.provenance.Source.serializeBinaryToWriter
    );
  }
  f = message.getTriggerId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getBuildOptionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(12, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getBuilderVersion();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string project_id = 2;
 * @return {string}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Command commands = 3;
 * @return {!Array<!proto.grafeas.v1beta1.provenance.Command>}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.getCommandsList = function() {
  return /** @type{!Array<!proto.grafeas.v1beta1.provenance.Command>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grafeas.v1beta1.provenance.Command, 3));
};


/**
 * @param {!Array<!proto.grafeas.v1beta1.provenance.Command>} value
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
*/
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.setCommandsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.grafeas.v1beta1.provenance.Command=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.provenance.Command}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.addCommands = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.grafeas.v1beta1.provenance.Command, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.clearCommandsList = function() {
  return this.setCommandsList([]);
};


/**
 * repeated Artifact built_artifacts = 4;
 * @return {!Array<!proto.grafeas.v1beta1.provenance.Artifact>}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.getBuiltArtifactsList = function() {
  return /** @type{!Array<!proto.grafeas.v1beta1.provenance.Artifact>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grafeas.v1beta1.provenance.Artifact, 4));
};


/**
 * @param {!Array<!proto.grafeas.v1beta1.provenance.Artifact>} value
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
*/
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.setBuiltArtifactsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.grafeas.v1beta1.provenance.Artifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.provenance.Artifact}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.addBuiltArtifacts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.grafeas.v1beta1.provenance.Artifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.clearBuiltArtifactsList = function() {
  return this.setBuiltArtifactsList([]);
};


/**
 * optional google.protobuf.Timestamp create_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
*/
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.setCreateTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.clearCreateTime = function() {
  return this.setCreateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp start_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
*/
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
*/
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string creator = 8;
 * @return {string}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.getCreator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.setCreator = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string logs_uri = 9;
 * @return {string}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.getLogsUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.setLogsUri = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional Source source_provenance = 10;
 * @return {?proto.grafeas.v1beta1.provenance.Source}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.getSourceProvenance = function() {
  return /** @type{?proto.grafeas.v1beta1.provenance.Source} */ (
    jspb.Message.getWrapperField(this, proto.grafeas.v1beta1.provenance.Source, 10));
};


/**
 * @param {?proto.grafeas.v1beta1.provenance.Source|undefined} value
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
*/
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.setSourceProvenance = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.clearSourceProvenance = function() {
  return this.setSourceProvenance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.hasSourceProvenance = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string trigger_id = 11;
 * @return {string}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.getTriggerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.setTriggerId = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * map<string, string> build_options = 12;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.getBuildOptionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 12, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.clearBuildOptionsMap = function() {
  this.getBuildOptionsMap().clear();
  return this;};


/**
 * optional string builder_version = 13;
 * @return {string}
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.getBuilderVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.provenance.BuildProvenance} returns this
 */
proto.grafeas.v1beta1.provenance.BuildProvenance.prototype.setBuilderVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grafeas.v1beta1.provenance.Source.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.provenance.Source.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.provenance.Source.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.provenance.Source} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.provenance.Source.toObject = function(includeInstance, msg) {
  var f, obj = {
    artifactStorageSourceUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fileHashesMap: (f = msg.getFileHashesMap()) ? f.toObject(includeInstance, proto.grafeas.v1beta1.provenance.FileHashes.toObject) : [],
    context: (f = msg.getContext()) && proto_v1beta1_source_pb.SourceContext.toObject(includeInstance, f),
    additionalContextsList: jspb.Message.toObjectList(msg.getAdditionalContextsList(),
    proto_v1beta1_source_pb.SourceContext.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.provenance.Source}
 */
proto.grafeas.v1beta1.provenance.Source.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.provenance.Source;
  return proto.grafeas.v1beta1.provenance.Source.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.provenance.Source} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.provenance.Source}
 */
proto.grafeas.v1beta1.provenance.Source.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setArtifactStorageSourceUri(value);
      break;
    case 2:
      var value = msg.getFileHashesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.grafeas.v1beta1.provenance.FileHashes.deserializeBinaryFromReader, "", new proto.grafeas.v1beta1.provenance.FileHashes());
         });
      break;
    case 3:
      var value = new proto_v1beta1_source_pb.SourceContext;
      reader.readMessage(value,proto_v1beta1_source_pb.SourceContext.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 4:
      var value = new proto_v1beta1_source_pb.SourceContext;
      reader.readMessage(value,proto_v1beta1_source_pb.SourceContext.deserializeBinaryFromReader);
      msg.addAdditionalContexts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.provenance.Source.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.provenance.Source.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.provenance.Source} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.provenance.Source.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArtifactStorageSourceUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFileHashesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.grafeas.v1beta1.provenance.FileHashes.serializeBinaryToWriter);
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto_v1beta1_source_pb.SourceContext.serializeBinaryToWriter
    );
  }
  f = message.getAdditionalContextsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto_v1beta1_source_pb.SourceContext.serializeBinaryToWriter
    );
  }
};


/**
 * optional string artifact_storage_source_uri = 1;
 * @return {string}
 */
proto.grafeas.v1beta1.provenance.Source.prototype.getArtifactStorageSourceUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.provenance.Source} returns this
 */
proto.grafeas.v1beta1.provenance.Source.prototype.setArtifactStorageSourceUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, FileHashes> file_hashes = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.grafeas.v1beta1.provenance.FileHashes>}
 */
proto.grafeas.v1beta1.provenance.Source.prototype.getFileHashesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.grafeas.v1beta1.provenance.FileHashes>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.grafeas.v1beta1.provenance.FileHashes));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.grafeas.v1beta1.provenance.Source} returns this
 */
proto.grafeas.v1beta1.provenance.Source.prototype.clearFileHashesMap = function() {
  this.getFileHashesMap().clear();
  return this;};


/**
 * optional grafeas.v1beta1.source.SourceContext context = 3;
 * @return {?proto.grafeas.v1beta1.source.SourceContext}
 */
proto.grafeas.v1beta1.provenance.Source.prototype.getContext = function() {
  return /** @type{?proto.grafeas.v1beta1.source.SourceContext} */ (
    jspb.Message.getWrapperField(this, proto_v1beta1_source_pb.SourceContext, 3));
};


/**
 * @param {?proto.grafeas.v1beta1.source.SourceContext|undefined} value
 * @return {!proto.grafeas.v1beta1.provenance.Source} returns this
*/
proto.grafeas.v1beta1.provenance.Source.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grafeas.v1beta1.provenance.Source} returns this
 */
proto.grafeas.v1beta1.provenance.Source.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grafeas.v1beta1.provenance.Source.prototype.hasContext = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated grafeas.v1beta1.source.SourceContext additional_contexts = 4;
 * @return {!Array<!proto.grafeas.v1beta1.source.SourceContext>}
 */
proto.grafeas.v1beta1.provenance.Source.prototype.getAdditionalContextsList = function() {
  return /** @type{!Array<!proto.grafeas.v1beta1.source.SourceContext>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_v1beta1_source_pb.SourceContext, 4));
};


/**
 * @param {!Array<!proto.grafeas.v1beta1.source.SourceContext>} value
 * @return {!proto.grafeas.v1beta1.provenance.Source} returns this
*/
proto.grafeas.v1beta1.provenance.Source.prototype.setAdditionalContextsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.grafeas.v1beta1.source.SourceContext=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.source.SourceContext}
 */
proto.grafeas.v1beta1.provenance.Source.prototype.addAdditionalContexts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.grafeas.v1beta1.source.SourceContext, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.provenance.Source} returns this
 */
proto.grafeas.v1beta1.provenance.Source.prototype.clearAdditionalContextsList = function() {
  return this.setAdditionalContextsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grafeas.v1beta1.provenance.FileHashes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.provenance.FileHashes.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.provenance.FileHashes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.provenance.FileHashes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.provenance.FileHashes.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileHashList: jspb.Message.toObjectList(msg.getFileHashList(),
    proto.grafeas.v1beta1.provenance.Hash.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.provenance.FileHashes}
 */
proto.grafeas.v1beta1.provenance.FileHashes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.provenance.FileHashes;
  return proto.grafeas.v1beta1.provenance.FileHashes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.provenance.FileHashes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.provenance.FileHashes}
 */
proto.grafeas.v1beta1.provenance.FileHashes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grafeas.v1beta1.provenance.Hash;
      reader.readMessage(value,proto.grafeas.v1beta1.provenance.Hash.deserializeBinaryFromReader);
      msg.addFileHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.provenance.FileHashes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.provenance.FileHashes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.provenance.FileHashes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.provenance.FileHashes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileHashList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.grafeas.v1beta1.provenance.Hash.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Hash file_hash = 1;
 * @return {!Array<!proto.grafeas.v1beta1.provenance.Hash>}
 */
proto.grafeas.v1beta1.provenance.FileHashes.prototype.getFileHashList = function() {
  return /** @type{!Array<!proto.grafeas.v1beta1.provenance.Hash>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grafeas.v1beta1.provenance.Hash, 1));
};


/**
 * @param {!Array<!proto.grafeas.v1beta1.provenance.Hash>} value
 * @return {!proto.grafeas.v1beta1.provenance.FileHashes} returns this
*/
proto.grafeas.v1beta1.provenance.FileHashes.prototype.setFileHashList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grafeas.v1beta1.provenance.Hash=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.provenance.Hash}
 */
proto.grafeas.v1beta1.provenance.FileHashes.prototype.addFileHash = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grafeas.v1beta1.provenance.Hash, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.provenance.FileHashes} returns this
 */
proto.grafeas.v1beta1.provenance.FileHashes.prototype.clearFileHashList = function() {
  return this.setFileHashList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.provenance.Hash.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.provenance.Hash.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.provenance.Hash} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.provenance.Hash.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: msg.getValue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.provenance.Hash}
 */
proto.grafeas.v1beta1.provenance.Hash.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.provenance.Hash;
  return proto.grafeas.v1beta1.provenance.Hash.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.provenance.Hash} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.provenance.Hash}
 */
proto.grafeas.v1beta1.provenance.Hash.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.grafeas.v1beta1.provenance.Hash.HashType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.provenance.Hash.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.provenance.Hash.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.provenance.Hash} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.provenance.Hash.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.grafeas.v1beta1.provenance.Hash.HashType = {
  HASH_TYPE_UNSPECIFIED: 0,
  SHA256: 1
};

/**
 * optional HashType type = 1;
 * @return {!proto.grafeas.v1beta1.provenance.Hash.HashType}
 */
proto.grafeas.v1beta1.provenance.Hash.prototype.getType = function() {
  return /** @type {!proto.grafeas.v1beta1.provenance.Hash.HashType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.grafeas.v1beta1.provenance.Hash.HashType} value
 * @return {!proto.grafeas.v1beta1.provenance.Hash} returns this
 */
proto.grafeas.v1beta1.provenance.Hash.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bytes value = 2;
 * @return {!(string|Uint8Array)}
 */
proto.grafeas.v1beta1.provenance.Hash.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes value = 2;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.grafeas.v1beta1.provenance.Hash.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.provenance.Hash.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.grafeas.v1beta1.provenance.Hash} returns this
 */
proto.grafeas.v1beta1.provenance.Hash.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grafeas.v1beta1.provenance.Command.repeatedFields_ = [2,3,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.provenance.Command.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.provenance.Command.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.provenance.Command} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.provenance.Command.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    envList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    argsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    dir: jspb.Message.getFieldWithDefault(msg, 4, ""),
    id: jspb.Message.getFieldWithDefault(msg, 5, ""),
    waitForList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.provenance.Command}
 */
proto.grafeas.v1beta1.provenance.Command.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.provenance.Command;
  return proto.grafeas.v1beta1.provenance.Command.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.provenance.Command} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.provenance.Command}
 */
proto.grafeas.v1beta1.provenance.Command.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addEnv(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addArgs(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDir(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addWaitFor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.provenance.Command.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.provenance.Command.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.provenance.Command} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.provenance.Command.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEnvList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getArgsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getDir();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getWaitForList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.grafeas.v1beta1.provenance.Command.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.provenance.Command} returns this
 */
proto.grafeas.v1beta1.provenance.Command.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string env = 2;
 * @return {!Array<string>}
 */
proto.grafeas.v1beta1.provenance.Command.prototype.getEnvList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.grafeas.v1beta1.provenance.Command} returns this
 */
proto.grafeas.v1beta1.provenance.Command.prototype.setEnvList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.provenance.Command} returns this
 */
proto.grafeas.v1beta1.provenance.Command.prototype.addEnv = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.provenance.Command} returns this
 */
proto.grafeas.v1beta1.provenance.Command.prototype.clearEnvList = function() {
  return this.setEnvList([]);
};


/**
 * repeated string args = 3;
 * @return {!Array<string>}
 */
proto.grafeas.v1beta1.provenance.Command.prototype.getArgsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.grafeas.v1beta1.provenance.Command} returns this
 */
proto.grafeas.v1beta1.provenance.Command.prototype.setArgsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.provenance.Command} returns this
 */
proto.grafeas.v1beta1.provenance.Command.prototype.addArgs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.provenance.Command} returns this
 */
proto.grafeas.v1beta1.provenance.Command.prototype.clearArgsList = function() {
  return this.setArgsList([]);
};


/**
 * optional string dir = 4;
 * @return {string}
 */
proto.grafeas.v1beta1.provenance.Command.prototype.getDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.provenance.Command} returns this
 */
proto.grafeas.v1beta1.provenance.Command.prototype.setDir = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string id = 5;
 * @return {string}
 */
proto.grafeas.v1beta1.provenance.Command.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.provenance.Command} returns this
 */
proto.grafeas.v1beta1.provenance.Command.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated string wait_for = 6;
 * @return {!Array<string>}
 */
proto.grafeas.v1beta1.provenance.Command.prototype.getWaitForList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.grafeas.v1beta1.provenance.Command} returns this
 */
proto.grafeas.v1beta1.provenance.Command.prototype.setWaitForList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.provenance.Command} returns this
 */
proto.grafeas.v1beta1.provenance.Command.prototype.addWaitFor = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.provenance.Command} returns this
 */
proto.grafeas.v1beta1.provenance.Command.prototype.clearWaitForList = function() {
  return this.setWaitForList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grafeas.v1beta1.provenance.Artifact.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.provenance.Artifact.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.provenance.Artifact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.provenance.Artifact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.provenance.Artifact.toObject = function(includeInstance, msg) {
  var f, obj = {
    checksum: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    namesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.provenance.Artifact}
 */
proto.grafeas.v1beta1.provenance.Artifact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.provenance.Artifact;
  return proto.grafeas.v1beta1.provenance.Artifact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.provenance.Artifact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.provenance.Artifact}
 */
proto.grafeas.v1beta1.provenance.Artifact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChecksum(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.provenance.Artifact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.provenance.Artifact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.provenance.Artifact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.provenance.Artifact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChecksum();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string checksum = 1;
 * @return {string}
 */
proto.grafeas.v1beta1.provenance.Artifact.prototype.getChecksum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.provenance.Artifact} returns this
 */
proto.grafeas.v1beta1.provenance.Artifact.prototype.setChecksum = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.grafeas.v1beta1.provenance.Artifact.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.provenance.Artifact} returns this
 */
proto.grafeas.v1beta1.provenance.Artifact.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string names = 3;
 * @return {!Array<string>}
 */
proto.grafeas.v1beta1.provenance.Artifact.prototype.getNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.grafeas.v1beta1.provenance.Artifact} returns this
 */
proto.grafeas.v1beta1.provenance.Artifact.prototype.setNamesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.provenance.Artifact} returns this
 */
proto.grafeas.v1beta1.provenance.Artifact.prototype.addNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.provenance.Artifact} returns this
 */
proto.grafeas.v1beta1.provenance.Artifact.prototype.clearNamesList = function() {
  return this.setNamesList([]);
};


goog.object.extend(exports, proto.grafeas.v1beta1.provenance);
