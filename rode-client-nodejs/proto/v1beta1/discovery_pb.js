// source: proto/v1beta1/discovery.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_rpc_status_pb = require('../../google/rpc/status_pb.js');
goog.object.extend(proto, google_rpc_status_pb);
var proto_v1beta1_common_pb = require('../../proto/v1beta1/common_pb.js');
goog.object.extend(proto, proto_v1beta1_common_pb);
goog.exportSymbol('proto.grafeas.v1beta1.discovery.Details', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.discovery.Discovered', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.discovery.Discovered.AnalysisStatus', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.discovery.Discovered.ContinuousAnalysis', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.discovery.Discovery', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.discovery.Discovery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grafeas.v1beta1.discovery.Discovery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.discovery.Discovery.displayName = 'proto.grafeas.v1beta1.discovery.Discovery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.discovery.Details = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grafeas.v1beta1.discovery.Details, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.discovery.Details.displayName = 'proto.grafeas.v1beta1.discovery.Details';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.discovery.Discovered = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grafeas.v1beta1.discovery.Discovered, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.discovery.Discovered.displayName = 'proto.grafeas.v1beta1.discovery.Discovered';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.discovery.Discovery.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.discovery.Discovery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.discovery.Discovery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.discovery.Discovery.toObject = function(includeInstance, msg) {
  var f, obj = {
    analysisKind: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.discovery.Discovery}
 */
proto.grafeas.v1beta1.discovery.Discovery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.discovery.Discovery;
  return proto.grafeas.v1beta1.discovery.Discovery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.discovery.Discovery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.discovery.Discovery}
 */
proto.grafeas.v1beta1.discovery.Discovery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.grafeas.v1beta1.NoteKind} */ (reader.readEnum());
      msg.setAnalysisKind(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.discovery.Discovery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.discovery.Discovery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.discovery.Discovery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.discovery.Discovery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnalysisKind();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional grafeas.v1beta1.NoteKind analysis_kind = 1;
 * @return {!proto.grafeas.v1beta1.NoteKind}
 */
proto.grafeas.v1beta1.discovery.Discovery.prototype.getAnalysisKind = function() {
  return /** @type {!proto.grafeas.v1beta1.NoteKind} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.grafeas.v1beta1.NoteKind} value
 * @return {!proto.grafeas.v1beta1.discovery.Discovery} returns this
 */
proto.grafeas.v1beta1.discovery.Discovery.prototype.setAnalysisKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.discovery.Details.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.discovery.Details.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.discovery.Details} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.discovery.Details.toObject = function(includeInstance, msg) {
  var f, obj = {
    discovered: (f = msg.getDiscovered()) && proto.grafeas.v1beta1.discovery.Discovered.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.discovery.Details}
 */
proto.grafeas.v1beta1.discovery.Details.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.discovery.Details;
  return proto.grafeas.v1beta1.discovery.Details.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.discovery.Details} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.discovery.Details}
 */
proto.grafeas.v1beta1.discovery.Details.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grafeas.v1beta1.discovery.Discovered;
      reader.readMessage(value,proto.grafeas.v1beta1.discovery.Discovered.deserializeBinaryFromReader);
      msg.setDiscovered(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.discovery.Details.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.discovery.Details.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.discovery.Details} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.discovery.Details.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDiscovered();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.grafeas.v1beta1.discovery.Discovered.serializeBinaryToWriter
    );
  }
};


/**
 * optional Discovered discovered = 1;
 * @return {?proto.grafeas.v1beta1.discovery.Discovered}
 */
proto.grafeas.v1beta1.discovery.Details.prototype.getDiscovered = function() {
  return /** @type{?proto.grafeas.v1beta1.discovery.Discovered} */ (
    jspb.Message.getWrapperField(this, proto.grafeas.v1beta1.discovery.Discovered, 1));
};


/**
 * @param {?proto.grafeas.v1beta1.discovery.Discovered|undefined} value
 * @return {!proto.grafeas.v1beta1.discovery.Details} returns this
*/
proto.grafeas.v1beta1.discovery.Details.prototype.setDiscovered = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grafeas.v1beta1.discovery.Details} returns this
 */
proto.grafeas.v1beta1.discovery.Details.prototype.clearDiscovered = function() {
  return this.setDiscovered(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grafeas.v1beta1.discovery.Details.prototype.hasDiscovered = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.discovery.Discovered.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.discovery.Discovered.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.discovery.Discovered} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.discovery.Discovered.toObject = function(includeInstance, msg) {
  var f, obj = {
    continuousAnalysis: jspb.Message.getFieldWithDefault(msg, 1, 0),
    lastAnalysisTime: (f = msg.getLastAnalysisTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    analysisStatus: jspb.Message.getFieldWithDefault(msg, 3, 0),
    analysisStatusError: (f = msg.getAnalysisStatusError()) && google_rpc_status_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.discovery.Discovered}
 */
proto.grafeas.v1beta1.discovery.Discovered.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.discovery.Discovered;
  return proto.grafeas.v1beta1.discovery.Discovered.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.discovery.Discovered} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.discovery.Discovered}
 */
proto.grafeas.v1beta1.discovery.Discovered.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.grafeas.v1beta1.discovery.Discovered.ContinuousAnalysis} */ (reader.readEnum());
      msg.setContinuousAnalysis(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastAnalysisTime(value);
      break;
    case 3:
      var value = /** @type {!proto.grafeas.v1beta1.discovery.Discovered.AnalysisStatus} */ (reader.readEnum());
      msg.setAnalysisStatus(value);
      break;
    case 4:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setAnalysisStatusError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.discovery.Discovered.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.discovery.Discovered.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.discovery.Discovered} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.discovery.Discovered.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContinuousAnalysis();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getLastAnalysisTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAnalysisStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAnalysisStatusError();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.grafeas.v1beta1.discovery.Discovered.ContinuousAnalysis = {
  CONTINUOUS_ANALYSIS_UNSPECIFIED: 0,
  ACTIVE: 1,
  INACTIVE: 2
};

/**
 * @enum {number}
 */
proto.grafeas.v1beta1.discovery.Discovered.AnalysisStatus = {
  ANALYSIS_STATUS_UNSPECIFIED: 0,
  PENDING: 1,
  SCANNING: 2,
  FINISHED_SUCCESS: 3,
  FINISHED_FAILED: 4,
  FINISHED_UNSUPPORTED: 5
};

/**
 * optional ContinuousAnalysis continuous_analysis = 1;
 * @return {!proto.grafeas.v1beta1.discovery.Discovered.ContinuousAnalysis}
 */
proto.grafeas.v1beta1.discovery.Discovered.prototype.getContinuousAnalysis = function() {
  return /** @type {!proto.grafeas.v1beta1.discovery.Discovered.ContinuousAnalysis} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.grafeas.v1beta1.discovery.Discovered.ContinuousAnalysis} value
 * @return {!proto.grafeas.v1beta1.discovery.Discovered} returns this
 */
proto.grafeas.v1beta1.discovery.Discovered.prototype.setContinuousAnalysis = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp last_analysis_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.grafeas.v1beta1.discovery.Discovered.prototype.getLastAnalysisTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.grafeas.v1beta1.discovery.Discovered} returns this
*/
proto.grafeas.v1beta1.discovery.Discovered.prototype.setLastAnalysisTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grafeas.v1beta1.discovery.Discovered} returns this
 */
proto.grafeas.v1beta1.discovery.Discovered.prototype.clearLastAnalysisTime = function() {
  return this.setLastAnalysisTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grafeas.v1beta1.discovery.Discovered.prototype.hasLastAnalysisTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AnalysisStatus analysis_status = 3;
 * @return {!proto.grafeas.v1beta1.discovery.Discovered.AnalysisStatus}
 */
proto.grafeas.v1beta1.discovery.Discovered.prototype.getAnalysisStatus = function() {
  return /** @type {!proto.grafeas.v1beta1.discovery.Discovered.AnalysisStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.grafeas.v1beta1.discovery.Discovered.AnalysisStatus} value
 * @return {!proto.grafeas.v1beta1.discovery.Discovered} returns this
 */
proto.grafeas.v1beta1.discovery.Discovered.prototype.setAnalysisStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional google.rpc.Status analysis_status_error = 4;
 * @return {?proto.google.rpc.Status}
 */
proto.grafeas.v1beta1.discovery.Discovered.prototype.getAnalysisStatusError = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 4));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.grafeas.v1beta1.discovery.Discovered} returns this
*/
proto.grafeas.v1beta1.discovery.Discovered.prototype.setAnalysisStatusError = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grafeas.v1beta1.discovery.Discovered} returns this
 */
proto.grafeas.v1beta1.discovery.Discovered.prototype.clearAnalysisStatusError = function() {
  return this.setAnalysisStatusError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grafeas.v1beta1.discovery.Discovered.prototype.hasAnalysisStatusError = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.grafeas.v1beta1.discovery);
