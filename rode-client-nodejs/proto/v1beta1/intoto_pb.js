// source: proto/v1beta1/intoto.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.grafeas.v1beta1.intoto.Details', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.intoto.InToto', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.intoto.InToto.ArtifactRule', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.intoto.Link', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.intoto.Link.Artifact', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.intoto.Link.ArtifactHashes', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.intoto.Link.ByProducts', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.intoto.Link.Environment', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.intoto.Signature', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.intoto.SigningKey', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.intoto.InToto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grafeas.v1beta1.intoto.InToto.repeatedFields_, null);
};
goog.inherits(proto.grafeas.v1beta1.intoto.InToto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.intoto.InToto.displayName = 'proto.grafeas.v1beta1.intoto.InToto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.intoto.InToto.ArtifactRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.repeatedFields_, null);
};
goog.inherits(proto.grafeas.v1beta1.intoto.InToto.ArtifactRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.displayName = 'proto.grafeas.v1beta1.intoto.InToto.ArtifactRule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.intoto.SigningKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grafeas.v1beta1.intoto.SigningKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.intoto.SigningKey.displayName = 'proto.grafeas.v1beta1.intoto.SigningKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.intoto.Details = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grafeas.v1beta1.intoto.Details.repeatedFields_, null);
};
goog.inherits(proto.grafeas.v1beta1.intoto.Details, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.intoto.Details.displayName = 'proto.grafeas.v1beta1.intoto.Details';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.intoto.Signature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grafeas.v1beta1.intoto.Signature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.intoto.Signature.displayName = 'proto.grafeas.v1beta1.intoto.Signature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.intoto.Link = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grafeas.v1beta1.intoto.Link.repeatedFields_, null);
};
goog.inherits(proto.grafeas.v1beta1.intoto.Link, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.intoto.Link.displayName = 'proto.grafeas.v1beta1.intoto.Link';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.intoto.Link.ArtifactHashes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grafeas.v1beta1.intoto.Link.ArtifactHashes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.intoto.Link.ArtifactHashes.displayName = 'proto.grafeas.v1beta1.intoto.Link.ArtifactHashes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.intoto.Link.Artifact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grafeas.v1beta1.intoto.Link.Artifact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.intoto.Link.Artifact.displayName = 'proto.grafeas.v1beta1.intoto.Link.Artifact';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.intoto.Link.ByProducts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grafeas.v1beta1.intoto.Link.ByProducts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.intoto.Link.ByProducts.displayName = 'proto.grafeas.v1beta1.intoto.Link.ByProducts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.intoto.Link.Environment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grafeas.v1beta1.intoto.Link.Environment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.intoto.Link.Environment.displayName = 'proto.grafeas.v1beta1.intoto.Link.Environment';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grafeas.v1beta1.intoto.InToto.repeatedFields_ = [2,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.intoto.InToto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.intoto.InToto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.InToto.toObject = function(includeInstance, msg) {
  var f, obj = {
    stepName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    signingKeysList: jspb.Message.toObjectList(msg.getSigningKeysList(),
    proto.grafeas.v1beta1.intoto.SigningKey.toObject, includeInstance),
    expectedMaterialsList: jspb.Message.toObjectList(msg.getExpectedMaterialsList(),
    proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.toObject, includeInstance),
    expectedProductsList: jspb.Message.toObjectList(msg.getExpectedProductsList(),
    proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.toObject, includeInstance),
    expectedCommandList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    threshold: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.intoto.InToto}
 */
proto.grafeas.v1beta1.intoto.InToto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.intoto.InToto;
  return proto.grafeas.v1beta1.intoto.InToto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.intoto.InToto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.intoto.InToto}
 */
proto.grafeas.v1beta1.intoto.InToto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStepName(value);
      break;
    case 2:
      var value = new proto.grafeas.v1beta1.intoto.SigningKey;
      reader.readMessage(value,proto.grafeas.v1beta1.intoto.SigningKey.deserializeBinaryFromReader);
      msg.addSigningKeys(value);
      break;
    case 3:
      var value = new proto.grafeas.v1beta1.intoto.InToto.ArtifactRule;
      reader.readMessage(value,proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.deserializeBinaryFromReader);
      msg.addExpectedMaterials(value);
      break;
    case 4:
      var value = new proto.grafeas.v1beta1.intoto.InToto.ArtifactRule;
      reader.readMessage(value,proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.deserializeBinaryFromReader);
      msg.addExpectedProducts(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addExpectedCommand(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setThreshold(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.intoto.InToto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.intoto.InToto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.InToto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStepName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSigningKeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.grafeas.v1beta1.intoto.SigningKey.serializeBinaryToWriter
    );
  }
  f = message.getExpectedMaterialsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.serializeBinaryToWriter
    );
  }
  f = message.getExpectedProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.serializeBinaryToWriter
    );
  }
  f = message.getExpectedCommandList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getThreshold();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    artifactRuleList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule}
 */
proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.intoto.InToto.ArtifactRule;
  return proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule}
 */
proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addArtifactRule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArtifactRuleList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string artifact_rule = 1;
 * @return {!Array<string>}
 */
proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.prototype.getArtifactRuleList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule} returns this
 */
proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.prototype.setArtifactRuleList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule} returns this
 */
proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.prototype.addArtifactRule = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule} returns this
 */
proto.grafeas.v1beta1.intoto.InToto.ArtifactRule.prototype.clearArtifactRuleList = function() {
  return this.setArtifactRuleList([]);
};


/**
 * optional string step_name = 1;
 * @return {string}
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.getStepName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.intoto.InToto} returns this
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.setStepName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated SigningKey signing_keys = 2;
 * @return {!Array<!proto.grafeas.v1beta1.intoto.SigningKey>}
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.getSigningKeysList = function() {
  return /** @type{!Array<!proto.grafeas.v1beta1.intoto.SigningKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grafeas.v1beta1.intoto.SigningKey, 2));
};


/**
 * @param {!Array<!proto.grafeas.v1beta1.intoto.SigningKey>} value
 * @return {!proto.grafeas.v1beta1.intoto.InToto} returns this
*/
proto.grafeas.v1beta1.intoto.InToto.prototype.setSigningKeysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.grafeas.v1beta1.intoto.SigningKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.intoto.SigningKey}
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.addSigningKeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.grafeas.v1beta1.intoto.SigningKey, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.intoto.InToto} returns this
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.clearSigningKeysList = function() {
  return this.setSigningKeysList([]);
};


/**
 * repeated ArtifactRule expected_materials = 3;
 * @return {!Array<!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule>}
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.getExpectedMaterialsList = function() {
  return /** @type{!Array<!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grafeas.v1beta1.intoto.InToto.ArtifactRule, 3));
};


/**
 * @param {!Array<!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule>} value
 * @return {!proto.grafeas.v1beta1.intoto.InToto} returns this
*/
proto.grafeas.v1beta1.intoto.InToto.prototype.setExpectedMaterialsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule}
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.addExpectedMaterials = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.grafeas.v1beta1.intoto.InToto.ArtifactRule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.intoto.InToto} returns this
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.clearExpectedMaterialsList = function() {
  return this.setExpectedMaterialsList([]);
};


/**
 * repeated ArtifactRule expected_products = 4;
 * @return {!Array<!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule>}
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.getExpectedProductsList = function() {
  return /** @type{!Array<!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grafeas.v1beta1.intoto.InToto.ArtifactRule, 4));
};


/**
 * @param {!Array<!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule>} value
 * @return {!proto.grafeas.v1beta1.intoto.InToto} returns this
*/
proto.grafeas.v1beta1.intoto.InToto.prototype.setExpectedProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.intoto.InToto.ArtifactRule}
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.addExpectedProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.grafeas.v1beta1.intoto.InToto.ArtifactRule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.intoto.InToto} returns this
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.clearExpectedProductsList = function() {
  return this.setExpectedProductsList([]);
};


/**
 * repeated string expected_command = 5;
 * @return {!Array<string>}
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.getExpectedCommandList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.grafeas.v1beta1.intoto.InToto} returns this
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.setExpectedCommandList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.intoto.InToto} returns this
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.addExpectedCommand = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.intoto.InToto} returns this
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.clearExpectedCommandList = function() {
  return this.setExpectedCommandList([]);
};


/**
 * optional int64 threshold = 6;
 * @return {number}
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.getThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.grafeas.v1beta1.intoto.InToto} returns this
 */
proto.grafeas.v1beta1.intoto.InToto.prototype.setThreshold = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.intoto.SigningKey.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.intoto.SigningKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.intoto.SigningKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.SigningKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    keyType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    publicKeyValue: jspb.Message.getFieldWithDefault(msg, 3, ""),
    keyScheme: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.intoto.SigningKey}
 */
proto.grafeas.v1beta1.intoto.SigningKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.intoto.SigningKey;
  return proto.grafeas.v1beta1.intoto.SigningKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.intoto.SigningKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.intoto.SigningKey}
 */
proto.grafeas.v1beta1.intoto.SigningKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicKeyValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyScheme(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.intoto.SigningKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.intoto.SigningKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.intoto.SigningKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.SigningKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKeyType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPublicKeyValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getKeyScheme();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string key_id = 1;
 * @return {string}
 */
proto.grafeas.v1beta1.intoto.SigningKey.prototype.getKeyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.intoto.SigningKey} returns this
 */
proto.grafeas.v1beta1.intoto.SigningKey.prototype.setKeyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string key_type = 2;
 * @return {string}
 */
proto.grafeas.v1beta1.intoto.SigningKey.prototype.getKeyType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.intoto.SigningKey} returns this
 */
proto.grafeas.v1beta1.intoto.SigningKey.prototype.setKeyType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string public_key_value = 3;
 * @return {string}
 */
proto.grafeas.v1beta1.intoto.SigningKey.prototype.getPublicKeyValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.intoto.SigningKey} returns this
 */
proto.grafeas.v1beta1.intoto.SigningKey.prototype.setPublicKeyValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string key_scheme = 4;
 * @return {string}
 */
proto.grafeas.v1beta1.intoto.SigningKey.prototype.getKeyScheme = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.intoto.SigningKey} returns this
 */
proto.grafeas.v1beta1.intoto.SigningKey.prototype.setKeyScheme = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grafeas.v1beta1.intoto.Details.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.intoto.Details.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.intoto.Details.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.intoto.Details} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.Details.toObject = function(includeInstance, msg) {
  var f, obj = {
    signaturesList: jspb.Message.toObjectList(msg.getSignaturesList(),
    proto.grafeas.v1beta1.intoto.Signature.toObject, includeInstance),
    link: (f = msg.getLink()) && proto.grafeas.v1beta1.intoto.Link.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.intoto.Details}
 */
proto.grafeas.v1beta1.intoto.Details.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.intoto.Details;
  return proto.grafeas.v1beta1.intoto.Details.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.intoto.Details} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.intoto.Details}
 */
proto.grafeas.v1beta1.intoto.Details.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grafeas.v1beta1.intoto.Signature;
      reader.readMessage(value,proto.grafeas.v1beta1.intoto.Signature.deserializeBinaryFromReader);
      msg.addSignatures(value);
      break;
    case 2:
      var value = new proto.grafeas.v1beta1.intoto.Link;
      reader.readMessage(value,proto.grafeas.v1beta1.intoto.Link.deserializeBinaryFromReader);
      msg.setLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.intoto.Details.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.intoto.Details.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.intoto.Details} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.Details.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.grafeas.v1beta1.intoto.Signature.serializeBinaryToWriter
    );
  }
  f = message.getLink();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.grafeas.v1beta1.intoto.Link.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Signature signatures = 1;
 * @return {!Array<!proto.grafeas.v1beta1.intoto.Signature>}
 */
proto.grafeas.v1beta1.intoto.Details.prototype.getSignaturesList = function() {
  return /** @type{!Array<!proto.grafeas.v1beta1.intoto.Signature>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grafeas.v1beta1.intoto.Signature, 1));
};


/**
 * @param {!Array<!proto.grafeas.v1beta1.intoto.Signature>} value
 * @return {!proto.grafeas.v1beta1.intoto.Details} returns this
*/
proto.grafeas.v1beta1.intoto.Details.prototype.setSignaturesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grafeas.v1beta1.intoto.Signature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.intoto.Signature}
 */
proto.grafeas.v1beta1.intoto.Details.prototype.addSignatures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grafeas.v1beta1.intoto.Signature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.intoto.Details} returns this
 */
proto.grafeas.v1beta1.intoto.Details.prototype.clearSignaturesList = function() {
  return this.setSignaturesList([]);
};


/**
 * optional Link link = 2;
 * @return {?proto.grafeas.v1beta1.intoto.Link}
 */
proto.grafeas.v1beta1.intoto.Details.prototype.getLink = function() {
  return /** @type{?proto.grafeas.v1beta1.intoto.Link} */ (
    jspb.Message.getWrapperField(this, proto.grafeas.v1beta1.intoto.Link, 2));
};


/**
 * @param {?proto.grafeas.v1beta1.intoto.Link|undefined} value
 * @return {!proto.grafeas.v1beta1.intoto.Details} returns this
*/
proto.grafeas.v1beta1.intoto.Details.prototype.setLink = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grafeas.v1beta1.intoto.Details} returns this
 */
proto.grafeas.v1beta1.intoto.Details.prototype.clearLink = function() {
  return this.setLink(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grafeas.v1beta1.intoto.Details.prototype.hasLink = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.intoto.Signature.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.intoto.Signature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.intoto.Signature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.Signature.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    signature: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.intoto.Signature}
 */
proto.grafeas.v1beta1.intoto.Signature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.intoto.Signature;
  return proto.grafeas.v1beta1.intoto.Signature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.intoto.Signature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.intoto.Signature}
 */
proto.grafeas.v1beta1.intoto.Signature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.intoto.Signature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.intoto.Signature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.intoto.Signature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.Signature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSignature();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key_id = 1;
 * @return {string}
 */
proto.grafeas.v1beta1.intoto.Signature.prototype.getKeyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.intoto.Signature} returns this
 */
proto.grafeas.v1beta1.intoto.Signature.prototype.setKeyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string signature = 2;
 * @return {string}
 */
proto.grafeas.v1beta1.intoto.Signature.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.intoto.Signature} returns this
 */
proto.grafeas.v1beta1.intoto.Signature.prototype.setSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grafeas.v1beta1.intoto.Link.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.intoto.Link.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.intoto.Link.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.intoto.Link} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.Link.toObject = function(includeInstance, msg) {
  var f, obj = {
    effectiveCommandList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    materialsList: jspb.Message.toObjectList(msg.getMaterialsList(),
    proto.grafeas.v1beta1.intoto.Link.Artifact.toObject, includeInstance),
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.grafeas.v1beta1.intoto.Link.Artifact.toObject, includeInstance),
    byproducts: (f = msg.getByproducts()) && proto.grafeas.v1beta1.intoto.Link.ByProducts.toObject(includeInstance, f),
    environment: (f = msg.getEnvironment()) && proto.grafeas.v1beta1.intoto.Link.Environment.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.intoto.Link}
 */
proto.grafeas.v1beta1.intoto.Link.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.intoto.Link;
  return proto.grafeas.v1beta1.intoto.Link.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.intoto.Link} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.intoto.Link}
 */
proto.grafeas.v1beta1.intoto.Link.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addEffectiveCommand(value);
      break;
    case 2:
      var value = new proto.grafeas.v1beta1.intoto.Link.Artifact;
      reader.readMessage(value,proto.grafeas.v1beta1.intoto.Link.Artifact.deserializeBinaryFromReader);
      msg.addMaterials(value);
      break;
    case 3:
      var value = new proto.grafeas.v1beta1.intoto.Link.Artifact;
      reader.readMessage(value,proto.grafeas.v1beta1.intoto.Link.Artifact.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    case 4:
      var value = new proto.grafeas.v1beta1.intoto.Link.ByProducts;
      reader.readMessage(value,proto.grafeas.v1beta1.intoto.Link.ByProducts.deserializeBinaryFromReader);
      msg.setByproducts(value);
      break;
    case 5:
      var value = new proto.grafeas.v1beta1.intoto.Link.Environment;
      reader.readMessage(value,proto.grafeas.v1beta1.intoto.Link.Environment.deserializeBinaryFromReader);
      msg.setEnvironment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.intoto.Link.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.intoto.Link.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.intoto.Link} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.Link.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEffectiveCommandList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getMaterialsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.grafeas.v1beta1.intoto.Link.Artifact.serializeBinaryToWriter
    );
  }
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.grafeas.v1beta1.intoto.Link.Artifact.serializeBinaryToWriter
    );
  }
  f = message.getByproducts();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.grafeas.v1beta1.intoto.Link.ByProducts.serializeBinaryToWriter
    );
  }
  f = message.getEnvironment();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.grafeas.v1beta1.intoto.Link.Environment.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.intoto.Link.ArtifactHashes.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.intoto.Link.ArtifactHashes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.intoto.Link.ArtifactHashes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.Link.ArtifactHashes.toObject = function(includeInstance, msg) {
  var f, obj = {
    sha256: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.intoto.Link.ArtifactHashes}
 */
proto.grafeas.v1beta1.intoto.Link.ArtifactHashes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.intoto.Link.ArtifactHashes;
  return proto.grafeas.v1beta1.intoto.Link.ArtifactHashes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.intoto.Link.ArtifactHashes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.intoto.Link.ArtifactHashes}
 */
proto.grafeas.v1beta1.intoto.Link.ArtifactHashes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSha256(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.intoto.Link.ArtifactHashes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.intoto.Link.ArtifactHashes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.intoto.Link.ArtifactHashes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.Link.ArtifactHashes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSha256();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string sha256 = 1;
 * @return {string}
 */
proto.grafeas.v1beta1.intoto.Link.ArtifactHashes.prototype.getSha256 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.intoto.Link.ArtifactHashes} returns this
 */
proto.grafeas.v1beta1.intoto.Link.ArtifactHashes.prototype.setSha256 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.intoto.Link.Artifact.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.intoto.Link.Artifact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.intoto.Link.Artifact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.Link.Artifact.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hashes: (f = msg.getHashes()) && proto.grafeas.v1beta1.intoto.Link.ArtifactHashes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.intoto.Link.Artifact}
 */
proto.grafeas.v1beta1.intoto.Link.Artifact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.intoto.Link.Artifact;
  return proto.grafeas.v1beta1.intoto.Link.Artifact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.intoto.Link.Artifact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.intoto.Link.Artifact}
 */
proto.grafeas.v1beta1.intoto.Link.Artifact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceUri(value);
      break;
    case 2:
      var value = new proto.grafeas.v1beta1.intoto.Link.ArtifactHashes;
      reader.readMessage(value,proto.grafeas.v1beta1.intoto.Link.ArtifactHashes.deserializeBinaryFromReader);
      msg.setHashes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.intoto.Link.Artifact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.intoto.Link.Artifact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.intoto.Link.Artifact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.Link.Artifact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHashes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.grafeas.v1beta1.intoto.Link.ArtifactHashes.serializeBinaryToWriter
    );
  }
};


/**
 * optional string resource_uri = 1;
 * @return {string}
 */
proto.grafeas.v1beta1.intoto.Link.Artifact.prototype.getResourceUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grafeas.v1beta1.intoto.Link.Artifact} returns this
 */
proto.grafeas.v1beta1.intoto.Link.Artifact.prototype.setResourceUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ArtifactHashes hashes = 2;
 * @return {?proto.grafeas.v1beta1.intoto.Link.ArtifactHashes}
 */
proto.grafeas.v1beta1.intoto.Link.Artifact.prototype.getHashes = function() {
  return /** @type{?proto.grafeas.v1beta1.intoto.Link.ArtifactHashes} */ (
    jspb.Message.getWrapperField(this, proto.grafeas.v1beta1.intoto.Link.ArtifactHashes, 2));
};


/**
 * @param {?proto.grafeas.v1beta1.intoto.Link.ArtifactHashes|undefined} value
 * @return {!proto.grafeas.v1beta1.intoto.Link.Artifact} returns this
*/
proto.grafeas.v1beta1.intoto.Link.Artifact.prototype.setHashes = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grafeas.v1beta1.intoto.Link.Artifact} returns this
 */
proto.grafeas.v1beta1.intoto.Link.Artifact.prototype.clearHashes = function() {
  return this.setHashes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grafeas.v1beta1.intoto.Link.Artifact.prototype.hasHashes = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.intoto.Link.ByProducts.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.intoto.Link.ByProducts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.intoto.Link.ByProducts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.Link.ByProducts.toObject = function(includeInstance, msg) {
  var f, obj = {
    customValuesMap: (f = msg.getCustomValuesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.intoto.Link.ByProducts}
 */
proto.grafeas.v1beta1.intoto.Link.ByProducts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.intoto.Link.ByProducts;
  return proto.grafeas.v1beta1.intoto.Link.ByProducts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.intoto.Link.ByProducts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.intoto.Link.ByProducts}
 */
proto.grafeas.v1beta1.intoto.Link.ByProducts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getCustomValuesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.intoto.Link.ByProducts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.intoto.Link.ByProducts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.intoto.Link.ByProducts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.Link.ByProducts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomValuesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> custom_values = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.grafeas.v1beta1.intoto.Link.ByProducts.prototype.getCustomValuesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.grafeas.v1beta1.intoto.Link.ByProducts} returns this
 */
proto.grafeas.v1beta1.intoto.Link.ByProducts.prototype.clearCustomValuesMap = function() {
  this.getCustomValuesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.intoto.Link.Environment.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.intoto.Link.Environment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.intoto.Link.Environment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.Link.Environment.toObject = function(includeInstance, msg) {
  var f, obj = {
    customValuesMap: (f = msg.getCustomValuesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.intoto.Link.Environment}
 */
proto.grafeas.v1beta1.intoto.Link.Environment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.intoto.Link.Environment;
  return proto.grafeas.v1beta1.intoto.Link.Environment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.intoto.Link.Environment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.intoto.Link.Environment}
 */
proto.grafeas.v1beta1.intoto.Link.Environment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getCustomValuesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.intoto.Link.Environment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.intoto.Link.Environment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.intoto.Link.Environment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.intoto.Link.Environment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomValuesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> custom_values = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.grafeas.v1beta1.intoto.Link.Environment.prototype.getCustomValuesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.grafeas.v1beta1.intoto.Link.Environment} returns this
 */
proto.grafeas.v1beta1.intoto.Link.Environment.prototype.clearCustomValuesMap = function() {
  this.getCustomValuesMap().clear();
  return this;};


/**
 * repeated string effective_command = 1;
 * @return {!Array<string>}
 */
proto.grafeas.v1beta1.intoto.Link.prototype.getEffectiveCommandList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.grafeas.v1beta1.intoto.Link} returns this
 */
proto.grafeas.v1beta1.intoto.Link.prototype.setEffectiveCommandList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.intoto.Link} returns this
 */
proto.grafeas.v1beta1.intoto.Link.prototype.addEffectiveCommand = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.intoto.Link} returns this
 */
proto.grafeas.v1beta1.intoto.Link.prototype.clearEffectiveCommandList = function() {
  return this.setEffectiveCommandList([]);
};


/**
 * repeated Artifact materials = 2;
 * @return {!Array<!proto.grafeas.v1beta1.intoto.Link.Artifact>}
 */
proto.grafeas.v1beta1.intoto.Link.prototype.getMaterialsList = function() {
  return /** @type{!Array<!proto.grafeas.v1beta1.intoto.Link.Artifact>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grafeas.v1beta1.intoto.Link.Artifact, 2));
};


/**
 * @param {!Array<!proto.grafeas.v1beta1.intoto.Link.Artifact>} value
 * @return {!proto.grafeas.v1beta1.intoto.Link} returns this
*/
proto.grafeas.v1beta1.intoto.Link.prototype.setMaterialsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.grafeas.v1beta1.intoto.Link.Artifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.intoto.Link.Artifact}
 */
proto.grafeas.v1beta1.intoto.Link.prototype.addMaterials = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.grafeas.v1beta1.intoto.Link.Artifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.intoto.Link} returns this
 */
proto.grafeas.v1beta1.intoto.Link.prototype.clearMaterialsList = function() {
  return this.setMaterialsList([]);
};


/**
 * repeated Artifact products = 3;
 * @return {!Array<!proto.grafeas.v1beta1.intoto.Link.Artifact>}
 */
proto.grafeas.v1beta1.intoto.Link.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.grafeas.v1beta1.intoto.Link.Artifact>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grafeas.v1beta1.intoto.Link.Artifact, 3));
};


/**
 * @param {!Array<!proto.grafeas.v1beta1.intoto.Link.Artifact>} value
 * @return {!proto.grafeas.v1beta1.intoto.Link} returns this
*/
proto.grafeas.v1beta1.intoto.Link.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.grafeas.v1beta1.intoto.Link.Artifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grafeas.v1beta1.intoto.Link.Artifact}
 */
proto.grafeas.v1beta1.intoto.Link.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.grafeas.v1beta1.intoto.Link.Artifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grafeas.v1beta1.intoto.Link} returns this
 */
proto.grafeas.v1beta1.intoto.Link.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};


/**
 * optional ByProducts byproducts = 4;
 * @return {?proto.grafeas.v1beta1.intoto.Link.ByProducts}
 */
proto.grafeas.v1beta1.intoto.Link.prototype.getByproducts = function() {
  return /** @type{?proto.grafeas.v1beta1.intoto.Link.ByProducts} */ (
    jspb.Message.getWrapperField(this, proto.grafeas.v1beta1.intoto.Link.ByProducts, 4));
};


/**
 * @param {?proto.grafeas.v1beta1.intoto.Link.ByProducts|undefined} value
 * @return {!proto.grafeas.v1beta1.intoto.Link} returns this
*/
proto.grafeas.v1beta1.intoto.Link.prototype.setByproducts = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grafeas.v1beta1.intoto.Link} returns this
 */
proto.grafeas.v1beta1.intoto.Link.prototype.clearByproducts = function() {
  return this.setByproducts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grafeas.v1beta1.intoto.Link.prototype.hasByproducts = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Environment environment = 5;
 * @return {?proto.grafeas.v1beta1.intoto.Link.Environment}
 */
proto.grafeas.v1beta1.intoto.Link.prototype.getEnvironment = function() {
  return /** @type{?proto.grafeas.v1beta1.intoto.Link.Environment} */ (
    jspb.Message.getWrapperField(this, proto.grafeas.v1beta1.intoto.Link.Environment, 5));
};


/**
 * @param {?proto.grafeas.v1beta1.intoto.Link.Environment|undefined} value
 * @return {!proto.grafeas.v1beta1.intoto.Link} returns this
*/
proto.grafeas.v1beta1.intoto.Link.prototype.setEnvironment = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.grafeas.v1beta1.intoto.Link} returns this
 */
proto.grafeas.v1beta1.intoto.Link.prototype.clearEnvironment = function() {
  return this.setEnvironment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.grafeas.v1beta1.intoto.Link.prototype.hasEnvironment = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.grafeas.v1beta1.intoto);
