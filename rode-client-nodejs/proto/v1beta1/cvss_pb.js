// source: proto/v1beta1/cvss.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.grafeas.v1beta1.vulnerability.CVSSv3', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.vulnerability.CVSSv3.AttackComplexity', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.vulnerability.CVSSv3.AttackVector', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.vulnerability.CVSSv3.Impact', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.vulnerability.CVSSv3.PrivilegesRequired', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.vulnerability.CVSSv3.Scope', null, global);
goog.exportSymbol('proto.grafeas.v1beta1.vulnerability.CVSSv3.UserInteraction', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grafeas.v1beta1.vulnerability.CVSSv3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grafeas.v1beta1.vulnerability.CVSSv3.displayName = 'proto.grafeas.v1beta1.vulnerability.CVSSv3';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.toObject = function(opt_includeInstance) {
  return proto.grafeas.v1beta1.vulnerability.CVSSv3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grafeas.v1beta1.vulnerability.CVSSv3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    exploitabilityScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    impactScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    attackVector: jspb.Message.getFieldWithDefault(msg, 5, 0),
    attackComplexity: jspb.Message.getFieldWithDefault(msg, 6, 0),
    privilegesRequired: jspb.Message.getFieldWithDefault(msg, 7, 0),
    userInteraction: jspb.Message.getFieldWithDefault(msg, 8, 0),
    scope: jspb.Message.getFieldWithDefault(msg, 9, 0),
    confidentialityImpact: jspb.Message.getFieldWithDefault(msg, 10, 0),
    integrityImpact: jspb.Message.getFieldWithDefault(msg, 11, 0),
    availabilityImpact: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grafeas.v1beta1.vulnerability.CVSSv3;
  return proto.grafeas.v1beta1.vulnerability.CVSSv3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grafeas.v1beta1.vulnerability.CVSSv3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBaseScore(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setExploitabilityScore(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setImpactScore(value);
      break;
    case 5:
      var value = /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.AttackVector} */ (reader.readEnum());
      msg.setAttackVector(value);
      break;
    case 6:
      var value = /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.AttackComplexity} */ (reader.readEnum());
      msg.setAttackComplexity(value);
      break;
    case 7:
      var value = /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.PrivilegesRequired} */ (reader.readEnum());
      msg.setPrivilegesRequired(value);
      break;
    case 8:
      var value = /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.UserInteraction} */ (reader.readEnum());
      msg.setUserInteraction(value);
      break;
    case 9:
      var value = /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Scope} */ (reader.readEnum());
      msg.setScope(value);
      break;
    case 10:
      var value = /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Impact} */ (reader.readEnum());
      msg.setConfidentialityImpact(value);
      break;
    case 11:
      var value = /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Impact} */ (reader.readEnum());
      msg.setIntegrityImpact(value);
      break;
    case 12:
      var value = /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Impact} */ (reader.readEnum());
      msg.setAvailabilityImpact(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grafeas.v1beta1.vulnerability.CVSSv3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grafeas.v1beta1.vulnerability.CVSSv3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBaseScore();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getExploitabilityScore();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getImpactScore();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getAttackVector();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getAttackComplexity();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getPrivilegesRequired();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getUserInteraction();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getScope();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getConfidentialityImpact();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getIntegrityImpact();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getAvailabilityImpact();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.AttackVector = {
  ATTACK_VECTOR_UNSPECIFIED: 0,
  ATTACK_VECTOR_NETWORK: 1,
  ATTACK_VECTOR_ADJACENT: 2,
  ATTACK_VECTOR_LOCAL: 3,
  ATTACK_VECTOR_PHYSICAL: 4
};

/**
 * @enum {number}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.AttackComplexity = {
  ATTACK_COMPLEXITY_UNSPECIFIED: 0,
  ATTACK_COMPLEXITY_LOW: 1,
  ATTACK_COMPLEXITY_HIGH: 2
};

/**
 * @enum {number}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.PrivilegesRequired = {
  PRIVILEGES_REQUIRED_UNSPECIFIED: 0,
  PRIVILEGES_REQUIRED_NONE: 1,
  PRIVILEGES_REQUIRED_LOW: 2,
  PRIVILEGES_REQUIRED_HIGH: 3
};

/**
 * @enum {number}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.UserInteraction = {
  USER_INTERACTION_UNSPECIFIED: 0,
  USER_INTERACTION_NONE: 1,
  USER_INTERACTION_REQUIRED: 2
};

/**
 * @enum {number}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.Scope = {
  SCOPE_UNSPECIFIED: 0,
  SCOPE_UNCHANGED: 1,
  SCOPE_CHANGED: 2
};

/**
 * @enum {number}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.Impact = {
  IMPACT_UNSPECIFIED: 0,
  IMPACT_HIGH: 1,
  IMPACT_LOW: 2,
  IMPACT_NONE: 3
};

/**
 * optional float base_score = 1;
 * @return {number}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.getBaseScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3} returns this
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.setBaseScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float exploitability_score = 2;
 * @return {number}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.getExploitabilityScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3} returns this
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.setExploitabilityScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float impact_score = 3;
 * @return {number}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.getImpactScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3} returns this
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.setImpactScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional AttackVector attack_vector = 5;
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3.AttackVector}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.getAttackVector = function() {
  return /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.AttackVector} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.grafeas.v1beta1.vulnerability.CVSSv3.AttackVector} value
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3} returns this
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.setAttackVector = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional AttackComplexity attack_complexity = 6;
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3.AttackComplexity}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.getAttackComplexity = function() {
  return /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.AttackComplexity} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.grafeas.v1beta1.vulnerability.CVSSv3.AttackComplexity} value
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3} returns this
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.setAttackComplexity = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional PrivilegesRequired privileges_required = 7;
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3.PrivilegesRequired}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.getPrivilegesRequired = function() {
  return /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.PrivilegesRequired} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.grafeas.v1beta1.vulnerability.CVSSv3.PrivilegesRequired} value
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3} returns this
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.setPrivilegesRequired = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional UserInteraction user_interaction = 8;
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3.UserInteraction}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.getUserInteraction = function() {
  return /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.UserInteraction} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.grafeas.v1beta1.vulnerability.CVSSv3.UserInteraction} value
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3} returns this
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.setUserInteraction = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional Scope scope = 9;
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Scope}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.getScope = function() {
  return /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Scope} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Scope} value
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3} returns this
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.setScope = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional Impact confidentiality_impact = 10;
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Impact}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.getConfidentialityImpact = function() {
  return /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Impact} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Impact} value
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3} returns this
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.setConfidentialityImpact = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional Impact integrity_impact = 11;
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Impact}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.getIntegrityImpact = function() {
  return /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Impact} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Impact} value
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3} returns this
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.setIntegrityImpact = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional Impact availability_impact = 12;
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Impact}
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.getAvailabilityImpact = function() {
  return /** @type {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Impact} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.grafeas.v1beta1.vulnerability.CVSSv3.Impact} value
 * @return {!proto.grafeas.v1beta1.vulnerability.CVSSv3} returns this
 */
proto.grafeas.v1beta1.vulnerability.CVSSv3.prototype.setAvailabilityImpact = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


goog.object.extend(exports, proto.grafeas.v1beta1.vulnerability);
